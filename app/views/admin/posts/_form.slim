= form_for [:admin, post.object], method: post.form_method do |f|
  .AdminWidthConstrainer
    = f.submit 'Save', class: 'ButtonPrimary'
    - unless post.new?
      - if post.published?
        = link_to 'Unpublish', admin_post_unpublish_path(post), method: :patch, class: 'ButtonSecondary'
      - else
        = link_to 'Publish', admin_post_publish_path(post), method: :patch, class: 'ButtonSecondary'

  .u-smallMargin

  .AdminWidthConstrainer
    - Post::PRIMARY_TAGS.each do |tag|
      = f.check_box :tag_list, { multiple: true, checked: post.tag_list.include?(tag.to_s) }, tag
      = f.label "tag_list_#{tag}", tag.to_s, class: "Tag Tag--#{tag}"
      br

    = f.text_field :extra_tags, placeholder: 'Extra tags', class: 'Input', autocomplete: :off, value: post.secondary_tags

    = f.text_field :title, placeholder: 'Title', class: 'Input', autocomplete: :off
  .Editor#Editor
    .Editor-textareaWrapper
      = f.text_area :body, placeholder: 'Mark down your thoughts', id: 'Editor-textarea', 'v-model' => 'input', class: 'Editor-textarea'
    .Editor-preview
      .Post
        .Post-body v-html='input | marked'

- content_for :page_script
  javascript:
    $(function() {
      $('#Editor-textarea').setupInlineAttachment($('meta[name="csrf-token"]').attr('content'))
    });
