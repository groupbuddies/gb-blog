= form_for [:admin, post.object], method: post.form_method, multipart: true do |f|
  .u-largeMargin

  .AdminWidthConstrainer
    - if post.object.errors.any?
      .ErrorMsg
        - post.object.errors.each do |field, message|
          .ContentFormatter.ContentFormatter--center
            = [field, message].join(' ')

      .u-smallMargin

    .HorizontalGrid.HorizontalGrid--spaceBetween.HorizontalGrid--verticallyCentered
      .HorizontalGrid-cell
        = f.fields_for :hero, post.hero do |hero_form|
          .HorizontalGrid.HorizontalGrid--innerGutters.HorizontalGrid--variableWidth.HorizontalGrid--verticallyCentered
            .HorizontalGrid-cell
              span Hero Image:
            - if post.hero.image.url
              .HorizontalGrid-cell
                = hero_form.label :image
                  = image_tag post.hero.image.url, height: '50'
            .HorizontalGrid-cell
              = hero_form.file_field :image
            .HorizontalGrid-cell
              label
                = hero_form.check_box :remove_image, class: 'Checkbox'
                ' Remove hero image


      .HorizontalGrid-cell
        .HorizontalGrid.HorizontalGrid--innerGutters.HorizontalGrid--variableWidth.HorizontalGrid--right
          .HorizontalGrid-cell
          - unless post.new?
            .HorizontalGrid-cell = f.submit 'Preview', value: :preview, class: 'ButtonSecondary'
            - if post.published?
              .HorizontalGrid-cell = link_to 'Unpublish', admin_post_unpublish_path(post), method: :patch, class: 'ButtonSecondary'
            - else
              .HorizontalGrid-cell = link_to 'Publish', admin_post_publish_path(post), method: :patch, class: 'ButtonSecondary'
          .HorizontalGrid-cell = f.submit 'Save', class: 'ButtonPrimary'

  .u-smallMargin

  .AdminWidthConstrainer
    .HorizontalGrid.HorizontalGrid--variableWidth.HorizontalGrid--innerGutters.HorizontalGrid--verticallyCentered
      - Post::PRIMARY_TAGS.each do |tag|
        .HorizontalGrid-cell
          .TagCheckbox
            = f.check_box :tag_list, { multiple: true, checked: post.tag_list.include?(tag.to_s) }, tag, nil
            = f.label "tag_list_#{tag}", tag.to_s, class: "Tag Tag--#{tag}"
      .HorizontalGrid-cell
        = f.text_field :extra_tags, placeholder: 'Extra tags (comma separated)', class: 'Input', autocomplete: :off, value: post.secondary_tags.join(', ')

    .u-smallMargin

    = text_field_tag :title, post.raw_title, name: "post[title]", placeholder: 'Title', class: 'TitleInput', autocomplete: :off

  .u-smallMargin

  .Editor#Editor
    .HorizontalGrid
      .HorizontalGrid-cell
        .Editor-textareaWrapper
          = f.text_area :body, placeholder: 'Mark down your thoughts', id: 'Editor-textarea', 'v-model' => 'input', class: 'Editor-textarea'
      .HorizontalGrid-cell
        .Editor-preview
          .Post
            .Post-body v-html='input | marked'

- content_for :page_script
  javascript:
    $(function() {
      $('#Editor-textarea').setupInlineAttachment($('meta[name="csrf-token"]').attr('content'))
    });
